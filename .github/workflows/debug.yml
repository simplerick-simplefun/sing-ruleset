# This is a basic workflow to help you get started with Actions

name: debug

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: debug
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Get last sing-box tags
        id: getsb
        uses: actions/github-script@v7
        with:
          script: |
            const sbLatestRelease = await github.rest.repos.getLatestRelease({
              owner: 'SagerNet',
              repo: 'sing-box',
            });
            core.setOutput("singbox_tag", sbLatestRelease.data.tag_name);

      - name: Prepare enviroment
        run: |
          sudo apt update
          sudo apt install jq -y

      - name: download resources
        id: download
        env:
          IP_CONF_LINK: ${{ secrets.SB_IP_CFG }}
          SITE_CONF_LINK: ${{ secrets.SB_SITE_CFG }}
        run: |
          wget -O 'geosite.db' 'https://github.com/simplerick-simplefun/sing-geosite/releases/latest/download/geosite.db'
          wget -O 'geoip.db' 'https://github.com/simplerick-simplefun/sing-geoip/releases/latest/download/geoip.db'
          
          if [ "${IP_CONF_LINK}" == '' ] || [ "${IP_CONF_LINK}" == 'null' ] || [ "${SITE_CONF_LINK}" == '' ] || [ "${SITE_CONF_LINK}" == 'null' ]; then
            echo "ip_conf_file='./config/dest_ip_sets.json'" >> "$GITHUB_OUTPUT"
            echo "site_conf_filee='./config/dest_site_sets.json'" >> "$GITHUB_OUTPUT"
          else
            echo "ip_conf_file=$(curl -s -J -O -w '%{filename_effective}' ${IP_CONF_LINK})" >> "$GITHUB_OUTPUT"
            echo "site_conf_file=$(curl -s -J -O -w '%{filename_effective}' ${SITE_CONF_LINK})" >> "$GITHUB_OUTPUT"
          fi


      - name: Run a multi-line script
        run: |
          ip_conf=${{ steps.download.outputs.ip_conf_file }}
          site_conf=${{ steps.download.outputs.site_conf_file }}
          DEBUG=1 bash build.sh "$ip_conf" "$site_conf"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-build-artifacts
          path: |
            *.srs
            *.json
